/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ViewController;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JTextField;

/**
 *
 * @author esteban
 */
public class CharacterCreator extends javax.swing.JFrame {
    
    private ViewController controller;
    
    private JFileChooser openFileChosser;

    /**
     * Creates new form CharacterCreator
     */
    public CharacterCreator() {
        initComponents();
        controller = new ViewController();
        setLists();
        //imagenes de ejemplo
        String homerPath = "src/images/homer.jpg";
        String bartPath = "src/images/Bart.png";
        String weaponPath = "src/images/resortera.jpg";
        //
        setImage(bartPath,characterLabel);
        setImage(weaponPath,weaponLabel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        characterLabel = new javax.swing.JLabel();
        weaponLabel = new javax.swing.JLabel();
        selectImageCharacterButton = new javax.swing.JButton();
        selectImageWeoponButton = new javax.swing.JButton();
        nameCharacter = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameWeapon = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        isInventaryButton = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        weaponList = new javax.swing.JList<>();
        directionBox = new javax.swing.JComboBox<>();
        moveSteps = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        damageCharacter = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        levelCharacter = new javax.swing.JSpinner();
        xCharacter = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        yCharacter = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        size = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        maxHealth = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        health = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        hitPerUnitTime = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        cost = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        unlockLevel = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        saveCharacter = new javax.swing.JButton();
        deleteCharacter = new javax.swing.JButton();
        newCharacter = new javax.swing.JButton();
        levelWeapon = new javax.swing.JSpinner();
        xWeapon = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        yWeapon = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        damageWeapon = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        scope = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        explosionRange = new javax.swing.JSpinner();
        jLabel21 = new javax.swing.JLabel();
        maxSupplies = new javax.swing.JSpinner();
        jLabel22 = new javax.swing.JLabel();
        supplies = new javax.swing.JSpinner();
        jLabel23 = new javax.swing.JLabel();
        levelMultiplier = new javax.swing.JSpinner();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        levelDepend = new javax.swing.JCheckBox();
        saveWeapon = new javax.swing.JButton();
        deleteWeapon = new javax.swing.JButton();
        newWeapon = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jSpinner21 = new javax.swing.JSpinner();
        jButton7 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        characterList = new javax.swing.JList<>();
        stateSprite = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        spriteList = new javax.swing.JList<>();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Creador de personajes");

        characterLabel.setToolTipText("");
        characterLabel.setBorder(new javax.swing.border.MatteBorder(null));
        characterLabel.setMaximumSize(new java.awt.Dimension(250, 250));
        characterLabel.setPreferredSize(new java.awt.Dimension(250, 250));

        weaponLabel.setToolTipText("");
        weaponLabel.setBorder(new javax.swing.border.MatteBorder(null));
        weaponLabel.setMaximumSize(new java.awt.Dimension(250, 250));
        weaponLabel.setPreferredSize(new java.awt.Dimension(250, 250));

        selectImageCharacterButton.setText("Seleccionar imagen");
        selectImageCharacterButton.setMaximumSize(new java.awt.Dimension(250, 24));
        selectImageCharacterButton.setMinimumSize(new java.awt.Dimension(250, 24));
        selectImageCharacterButton.setPreferredSize(new java.awt.Dimension(250, 24));
        selectImageCharacterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImageCharacterButtonActionPerformed(evt);
            }
        });

        selectImageWeoponButton.setText("Seleccionar imagen");
        selectImageWeoponButton.setMaximumSize(new java.awt.Dimension(250, 24));
        selectImageWeoponButton.setMinimumSize(new java.awt.Dimension(250, 24));
        selectImageWeoponButton.setPreferredSize(new java.awt.Dimension(250, 24));
        selectImageWeoponButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImageWeoponButtonActionPerformed(evt);
            }
        });

        nameCharacter.setForeground(new java.awt.Color(153, 153, 153));
        nameCharacter.setText("Nombre");
        nameCharacter.setMaximumSize(new java.awt.Dimension(250, 24));
        nameCharacter.setMinimumSize(new java.awt.Dimension(250, 24));
        nameCharacter.setPreferredSize(new java.awt.Dimension(250, 24));
        nameCharacter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameCharacterFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameCharacterFocusLost(evt);
            }
        });
        nameCharacter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameCharacterActionPerformed(evt);
            }
        });
        nameCharacter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameCharacterKeyTyped(evt);
            }
        });

        jLabel1.setText("Personaje");

        jLabel2.setText("Arma");

        nameWeapon.setForeground(new java.awt.Color(153, 153, 153));
        nameWeapon.setText("Nombre");
        nameWeapon.setMaximumSize(new java.awt.Dimension(250, 24));
        nameWeapon.setMinimumSize(new java.awt.Dimension(250, 24));
        nameWeapon.setPreferredSize(new java.awt.Dimension(250, 24));
        nameWeapon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameWeaponFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameWeaponFocusLost(evt);
            }
        });
        nameWeapon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameWeaponActionPerformed(evt);
            }
        });
        nameWeapon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameWeaponKeyTyped(evt);
            }
        });

        jLabel3.setText("Lista de armas");

        isInventaryButton.setText("Solitarias");
        isInventaryButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                isInventaryButtonStateChanged(evt);
            }
        });
        isInventaryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                isInventaryButtonMouseClicked(evt);
            }
        });
        isInventaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isInventaryButtonActionPerformed(evt);
            }
        });

        weaponList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        weaponList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                weaponListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(weaponList);

        directionBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona una dirección", "Arriba", "Abajo", "Izquierda", "Derecha" }));
        directionBox.setToolTipText("");
        directionBox.setPreferredSize(new java.awt.Dimension(250, 24));

        moveSteps.setName("Cantidad de pasos "); // NOI18N
        moveSteps.setPreferredSize(new java.awt.Dimension(250, 24));
        moveSteps.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                moveStepsStateChanged(evt);
            }
        });

        jLabel5.setText("Cantidad de pasos");

        damageCharacter.setName("Cantidad de pasos "); // NOI18N
        damageCharacter.setPreferredSize(new java.awt.Dimension(250, 24));
        damageCharacter.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                damageCharacterStateChanged(evt);
            }
        });

        jLabel6.setText("Daño");

        jLabel7.setText("Nivel");

        levelCharacter.setName("Cantidad de pasos "); // NOI18N
        levelCharacter.setPreferredSize(new java.awt.Dimension(250, 24));
        levelCharacter.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                levelCharacterStateChanged(evt);
            }
        });

        xCharacter.setName("Cantidad de pasos "); // NOI18N
        xCharacter.setPreferredSize(new java.awt.Dimension(250, 24));
        xCharacter.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                xCharacterStateChanged(evt);
            }
        });

        jLabel8.setText("Posición en X");

        yCharacter.setName("Cantidad de pasos "); // NOI18N
        yCharacter.setPreferredSize(new java.awt.Dimension(250, 24));
        yCharacter.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                yCharacterStateChanged(evt);
            }
        });

        jLabel9.setText("Posición en Y");

        size.setName("Cantidad de pasos "); // NOI18N
        size.setPreferredSize(new java.awt.Dimension(250, 24));
        size.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sizeStateChanged(evt);
            }
        });

        jLabel10.setText("Tamaño");

        maxHealth.setName("Cantidad de pasos "); // NOI18N
        maxHealth.setPreferredSize(new java.awt.Dimension(250, 24));
        maxHealth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxHealthStateChanged(evt);
            }
        });

        jLabel11.setText("Salud maxima");

        health.setName("Cantidad de pasos "); // NOI18N
        health.setPreferredSize(new java.awt.Dimension(250, 24));
        health.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                healthStateChanged(evt);
            }
        });

        jLabel12.setText("Salud actual");

        hitPerUnitTime.setName("Cantidad de pasos "); // NOI18N
        hitPerUnitTime.setPreferredSize(new java.awt.Dimension(250, 24));
        hitPerUnitTime.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hitPerUnitTimeStateChanged(evt);
            }
        });

        jLabel13.setText("Golpes por unidad de tiempo");

        cost.setName("Cantidad de pasos "); // NOI18N
        cost.setPreferredSize(new java.awt.Dimension(250, 24));
        cost.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                costStateChanged(evt);
            }
        });

        jLabel14.setText("Costo");

        unlockLevel.setName("Cantidad de pasos "); // NOI18N
        unlockLevel.setPreferredSize(new java.awt.Dimension(250, 24));
        unlockLevel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                unlockLevelStateChanged(evt);
            }
        });

        jLabel15.setText("Nivel de desbloqueo");

        saveCharacter.setText("Guardar Personaje");
        saveCharacter.setPreferredSize(new java.awt.Dimension(250, 24));
        saveCharacter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCharacterActionPerformed(evt);
            }
        });

        deleteCharacter.setText("Eliminar Personaje");
        deleteCharacter.setPreferredSize(new java.awt.Dimension(250, 24));
        deleteCharacter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCharacterActionPerformed(evt);
            }
        });

        newCharacter.setText("Nuevo Personaje");
        newCharacter.setPreferredSize(new java.awt.Dimension(250, 24));
        newCharacter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCharacterActionPerformed(evt);
            }
        });

        levelWeapon.setName("Cantidad de pasos "); // NOI18N
        levelWeapon.setPreferredSize(new java.awt.Dimension(250, 24));
        levelWeapon.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                levelWeaponStateChanged(evt);
            }
        });

        xWeapon.setName("Cantidad de pasos "); // NOI18N
        xWeapon.setPreferredSize(new java.awt.Dimension(250, 24));
        xWeapon.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                xWeaponStateChanged(evt);
            }
        });

        jLabel16.setText("Posición en X");

        yWeapon.setName("Cantidad de pasos "); // NOI18N
        yWeapon.setPreferredSize(new java.awt.Dimension(250, 24));
        yWeapon.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                yWeaponStateChanged(evt);
            }
        });

        jLabel17.setText("Posición en Y");

        damageWeapon.setName("Cantidad de pasos "); // NOI18N
        damageWeapon.setPreferredSize(new java.awt.Dimension(250, 24));
        damageWeapon.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                damageWeaponStateChanged(evt);
            }
        });

        jLabel18.setText("Daño");

        jLabel19.setText("Nivel");

        scope.setName("Cantidad de pasos "); // NOI18N
        scope.setPreferredSize(new java.awt.Dimension(250, 24));
        scope.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                scopeStateChanged(evt);
            }
        });

        jLabel20.setText("Alcance");

        explosionRange.setName("Cantidad de pasos "); // NOI18N
        explosionRange.setPreferredSize(new java.awt.Dimension(250, 24));
        explosionRange.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                explosionRangeStateChanged(evt);
            }
        });

        jLabel21.setText("Rango de explosión");

        maxSupplies.setName("Cantidad de pasos "); // NOI18N
        maxSupplies.setPreferredSize(new java.awt.Dimension(250, 24));
        maxSupplies.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxSuppliesStateChanged(evt);
            }
        });

        jLabel22.setText("Munición máxima");

        supplies.setName("Cantidad de pasos "); // NOI18N
        supplies.setPreferredSize(new java.awt.Dimension(250, 24));
        supplies.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                suppliesStateChanged(evt);
            }
        });

        jLabel23.setText("Munición");

        levelMultiplier.setName("Cantidad de pasos "); // NOI18N
        levelMultiplier.setPreferredSize(new java.awt.Dimension(250, 24));
        levelMultiplier.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                levelMultiplierStateChanged(evt);
            }
        });

        jLabel24.setText("Multiplicador de nivel");

        jLabel25.setText("Nivel ");

        levelDepend.setText("Dependiente");
        levelDepend.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                levelDependStateChanged(evt);
            }
        });
        levelDepend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelDependActionPerformed(evt);
            }
        });

        saveWeapon.setText("Guardar Arma");
        saveWeapon.setPreferredSize(new java.awt.Dimension(250, 24));
        saveWeapon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveWeaponActionPerformed(evt);
            }
        });

        deleteWeapon.setText("Eliminar Arma");
        deleteWeapon.setPreferredSize(new java.awt.Dimension(250, 24));
        deleteWeapon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWeaponActionPerformed(evt);
            }
        });

        newWeapon.setText("Nuevo Arma");
        newWeapon.setPreferredSize(new java.awt.Dimension(250, 24));
        newWeapon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newWeaponActionPerformed(evt);
            }
        });

        jLabel26.setText("Nivel");

        jSpinner21.setName("Cantidad de pasos "); // NOI18N
        jSpinner21.setPreferredSize(new java.awt.Dimension(250, 24));

        jButton7.setText("Guardar Sprite");
        jButton7.setPreferredSize(new java.awt.Dimension(250, 24));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel27.setText("List de personajes");

        characterList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        characterList.setPreferredSize(new java.awt.Dimension(250, 100));
        characterList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                characterListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(characterList);

        stateSprite.setForeground(new java.awt.Color(153, 153, 153));
        stateSprite.setText("Estado");
        stateSprite.setMaximumSize(new java.awt.Dimension(250, 24));
        stateSprite.setMinimumSize(new java.awt.Dimension(250, 24));
        stateSprite.setPreferredSize(new java.awt.Dimension(250, 24));
        stateSprite.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stateSpriteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stateSpriteFocusLost(evt);
            }
        });
        stateSprite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateSpriteActionPerformed(evt);
            }
        });

        spriteList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(spriteList);

        jButton8.setText("Selecciona un arma a equipar");
        jButton8.setPreferredSize(new java.awt.Dimension(250, 24));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(characterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectImageCharacterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(nameWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5)
                    .addComponent(moveSteps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(damageCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(levelCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(xCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(yCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(damageWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(levelWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(xWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(yWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(maxHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(health, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(hitPerUnitTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(scope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(explosionRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(maxSupplies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(supplies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)
                            .addComponent(levelMultiplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(4, 4, 4)
                                .addComponent(levelDepend))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unlockLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isInventaryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(selectImageWeoponButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weaponLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(damageCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(levelCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(damageWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(levelWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(explosionRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maxSupplies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(supplies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(levelMultiplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel25)
                                    .addComponent(levelDepend)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel10)
                                            .addComponent(selectImageCharacterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel26))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jSpinner21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(maxHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stateSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(health, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hitPerUnitTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel15))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(unlockLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(directionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(moveSteps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(weaponLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectImageWeoponButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(characterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(isInventaryButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectImageCharacterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImageCharacterButtonActionPerformed
       String path = getSelectedPath();
       if(path != null){
           setImage(path,characterLabel);
       } else {
           System.out.println("No seleccionó ningún archivo");
       }
    }//GEN-LAST:event_selectImageCharacterButtonActionPerformed

    private void selectImageWeoponButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImageWeoponButtonActionPerformed
       String path = getSelectedPath();
       if(path != null){
           System.out.println(path);
           setImage(path,weaponLabel);
       } else {
           System.out.println("No seleccionó ningún archivo");
       }
    }//GEN-LAST:event_selectImageWeoponButtonActionPerformed

    private void nameCharacterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameCharacterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameCharacterActionPerformed

    private void nameCharacterFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameCharacterFocusGained
        if(nameCharacter.getText().equals("Nombre")){
            nameCharacter.setText("");
            nameCharacter.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_nameCharacterFocusGained

    private void nameCharacterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameCharacterFocusLost
        if(nameCharacter.getText().equals("")){
            nameCharacter.setText("Nombre");
            nameCharacter.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_nameCharacterFocusLost

    private void nameWeaponFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameWeaponFocusGained
        if(nameWeapon.getText().equals("Nombre")){
            nameWeapon.setText("");
            nameWeapon.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_nameWeaponFocusGained

    private void nameWeaponFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameWeaponFocusLost
        if(nameWeapon.getText().equals("")){
            nameWeapon.setText("Nombre");
            nameWeapon.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_nameWeaponFocusLost

    private void nameWeaponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameWeaponActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameWeaponActionPerformed

    private void isInventaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isInventaryButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isInventaryButtonActionPerformed

    private void levelDependActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelDependActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_levelDependActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void stateSpriteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stateSpriteFocusGained
        if(stateSprite.getText().equals("Estado")){
            stateSprite.setText("");
            stateSprite.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_stateSpriteFocusGained

    private void stateSpriteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stateSpriteFocusLost
        if(stateSprite.getText().equals("")){
            stateSprite.setText("Estado");
            stateSprite.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_stateSpriteFocusLost

    private void stateSpriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateSpriteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateSpriteActionPerformed

    private void characterListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_characterListMouseClicked
        int indexCharacter = characterList.locationToIndex(evt.getPoint());
        controller.setCharacter(indexCharacter);
    }//GEN-LAST:event_characterListMouseClicked

    private void weaponListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_weaponListMouseClicked
        int indexWeapon = weaponList.locationToIndex(evt.getPoint());
        if(controller.anyWeapon(isInventaryButton.isSelected())){
            controller.setWeapon(indexWeapon,isInventaryButton.isSelected());
        nameWeapon.setText(controller.getDataWeapon().getName());
        nameWeapon.setForeground(Color.BLACK);
        damageWeapon.setValue(controller.getDataWeapon().getDamage());
        levelWeapon.setValue(controller.getDataWeapon().getLevel());
        xWeapon.setValue(controller.getDataWeapon().getX());
        yWeapon.setValue(controller.getDataWeapon().getY());
        scope.setValue(controller.getDataWeapon().getScope());
        explosionRange.setValue(controller.getDataWeapon().getExplosionRange());
        maxSupplies.setValue(controller.getDataWeapon().getMaxSupplies());
        supplies.setValue(controller.getDataWeapon().getSupplies());
        levelMultiplier.setValue(controller.getDataWeapon().getLevelMultiplier());
        levelDepend.setSelected(controller.getDataWeapon().isLevelDependant());
        System.out.println("path: "+controller.getDataWeapon().getImage());
        setImage(controller.getDataWeapon().getImage(),weaponLabel);
        } else {
            showMessageDialog(null, "No hay armas");
        }
        
    }//GEN-LAST:event_weaponListMouseClicked

    private void damageCharacterStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_damageCharacterStateChanged
        controller.setDamage((int) damageCharacter.getValue(),true);
    }//GEN-LAST:event_damageCharacterStateChanged

    private void damageWeaponStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_damageWeaponStateChanged
        controller.setDamage((int) damageWeapon.getValue(),false);
    }//GEN-LAST:event_damageWeaponStateChanged

    private void levelCharacterStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_levelCharacterStateChanged
        controller.setLevel((int) levelCharacter.getValue(),true);
    }//GEN-LAST:event_levelCharacterStateChanged

    private void levelWeaponStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_levelWeaponStateChanged
        controller.setLevel((int) levelWeapon.getValue(),false);
    }//GEN-LAST:event_levelWeaponStateChanged

    private void xCharacterStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_xCharacterStateChanged
        controller.setX((int) xCharacter.getValue(), true);
    }//GEN-LAST:event_xCharacterStateChanged

    private void levelDependStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_levelDependStateChanged
        controller.setLevelDependant(levelDepend.isSelected());
    }//GEN-LAST:event_levelDependStateChanged

    private void xWeaponStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_xWeaponStateChanged
        controller.setX((int) xCharacter.getValue(), false);
    }//GEN-LAST:event_xWeaponStateChanged

    private void yCharacterStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_yCharacterStateChanged
        controller.setY((int) xCharacter.getValue(), true);
    }//GEN-LAST:event_yCharacterStateChanged

    private void yWeaponStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_yWeaponStateChanged
        controller.setY((int) xCharacter.getValue(), false);
    }//GEN-LAST:event_yWeaponStateChanged

    private void sizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sizeStateChanged
        controller.setSize((int) size.getValue());
    }//GEN-LAST:event_sizeStateChanged

    private void maxHealthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxHealthStateChanged
        controller.setMaxHealth((int) maxHealth.getValue());
    }//GEN-LAST:event_maxHealthStateChanged

    private void healthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_healthStateChanged
        controller.setMaxHealth((int) health.getValue());
    }//GEN-LAST:event_healthStateChanged

    private void hitPerUnitTimeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hitPerUnitTimeStateChanged
        controller.setHitsPerTimeUnit((int) hitPerUnitTime.getValue());
    }//GEN-LAST:event_hitPerUnitTimeStateChanged

    private void costStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_costStateChanged
        controller.setCost((int) cost.getValue());
    }//GEN-LAST:event_costStateChanged

    private void unlockLevelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_unlockLevelStateChanged
        controller.setUnlockLevel((int) unlockLevel.getValue());
    }//GEN-LAST:event_unlockLevelStateChanged

    private void moveStepsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_moveStepsStateChanged
        controller.setMoveSteps((int) moveSteps.getValue());
    }//GEN-LAST:event_moveStepsStateChanged

    private void scopeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_scopeStateChanged
        controller.setScope((int) scope.getValue());
    }//GEN-LAST:event_scopeStateChanged

    private void explosionRangeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_explosionRangeStateChanged
        controller.setExplosionRange((int) explosionRange.getValue());
    }//GEN-LAST:event_explosionRangeStateChanged

    private void maxSuppliesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxSuppliesStateChanged
        controller.setMaxSupplies((int) maxSupplies.getValue());
    }//GEN-LAST:event_maxSuppliesStateChanged

    private void suppliesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_suppliesStateChanged
        controller.setSupplies((int) supplies.getValue());
    }//GEN-LAST:event_suppliesStateChanged

    private void levelMultiplierStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_levelMultiplierStateChanged
        controller.setLevelMultiplier((int) levelMultiplier.getValue());
    }//GEN-LAST:event_levelMultiplierStateChanged

    private void nameCharacterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameCharacterKeyTyped
        controller.setName(nameCharacter.getText(),true);
    }//GEN-LAST:event_nameCharacterKeyTyped

    private void nameWeaponKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameWeaponKeyTyped
        controller.setName(nameWeapon.getText(),false);
    }//GEN-LAST:event_nameWeaponKeyTyped

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String[] options = controller.getNameWeapons();
        if(options[0].contains("No hay armas aún")){
            showMessageDialog(null, options[0]);
        } else {
           ImageIcon icon = new ImageIcon("src/images/icon.png");
           String name = (String)JOptionPane.showInputDialog(null, "Selecciona el arma que quieras", 
                "I like turtles", JOptionPane.QUESTION_MESSAGE,icon, options, options[0]); 
           controller.setEquipedWeapon(Arrays.asList(options).indexOf(name));
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void saveCharacterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCharacterActionPerformed
        boolean isSaved = controller.save(true);
        showSavedMessage(isSaved);
        setLists();
    }//GEN-LAST:event_saveCharacterActionPerformed

    private void saveWeaponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveWeaponActionPerformed
        boolean isSaved = controller.save(false);
        showSavedMessage(isSaved);
        setLists();
    }//GEN-LAST:event_saveWeaponActionPerformed

    private void deleteCharacterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCharacterActionPerformed
        controller.delete(true);
        setLists();
        //me falta actualizar pantalla
    }//GEN-LAST:event_deleteCharacterActionPerformed

    private void deleteWeaponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWeaponActionPerformed
        controller.delete(false);
        setLists();
        clearWeaponView();
    }//GEN-LAST:event_deleteWeaponActionPerformed

    private void newCharacterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCharacterActionPerformed
        controller.newGameObject(true);
    }//GEN-LAST:event_newCharacterActionPerformed

    private void newWeaponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newWeaponActionPerformed
        controller.newGameObject(false);
        clearWeaponView();
    }//GEN-LAST:event_newWeaponActionPerformed

    private void isInventaryButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_isInventaryButtonStateChanged
        
    }//GEN-LAST:event_isInventaryButtonStateChanged

    private void isInventaryButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_isInventaryButtonMouseClicked
        if(isInventaryButton.isSelected()){
            isInventaryButton.setText("Inventario");
        } else {
            isInventaryButton.setText("Solitarias");
        }
        clearWeaponView();
        setListWeapon(isInventaryButton.isSelected());
    }//GEN-LAST:event_isInventaryButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CharacterCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CharacterCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CharacterCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CharacterCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CharacterCreator().setVisible(true);
            }
        });
    }
    
    /**
     * Agregar una imagen a un label
     * @param path la dirección de la imagen
     * @param label el label donde agregar la imagen
     */
    private void setImage(String path,javax.swing.JLabel label) {
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(path));
            Image dimg = img.getScaledInstance(label.getWidth(), 
                    label.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon imageIcon = new ImageIcon(dimg);
            label.setIcon(imageIcon);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private String getSelectedPath(){
        openFileChosser = new JFileChooser();
        openFileChosser.setCurrentDirectory(new File("src/images/"));
        int returnValue = openFileChosser.showOpenDialog(this);
        if(returnValue == JFileChooser.APPROVE_OPTION){
            return openFileChosser.getSelectedFile().getPath();
        } else {
            return null;
        }
    }
    
    private void showSavedMessage(boolean isSaved){
        String result = "";
        if(isSaved){
            result += "El personaje se ha guardado";
        } else {
            result += "Error al guardar el personaje";
        }
        showMessageDialog(null,result);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel characterLabel;
    private javax.swing.JList<String> characterList;
    private javax.swing.JSpinner cost;
    private javax.swing.JSpinner damageCharacter;
    private javax.swing.JSpinner damageWeapon;
    private javax.swing.JButton deleteCharacter;
    private javax.swing.JButton deleteWeapon;
    private javax.swing.JComboBox<String> directionBox;
    private javax.swing.JSpinner explosionRange;
    private javax.swing.JSpinner health;
    private javax.swing.JSpinner hitPerUnitTime;
    private javax.swing.JToggleButton isInventaryButton;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner21;
    private javax.swing.JSpinner levelCharacter;
    private javax.swing.JCheckBox levelDepend;
    private javax.swing.JSpinner levelMultiplier;
    private javax.swing.JSpinner levelWeapon;
    private javax.swing.JSpinner maxHealth;
    private javax.swing.JSpinner maxSupplies;
    private javax.swing.JSpinner moveSteps;
    private javax.swing.JTextField nameCharacter;
    private javax.swing.JTextField nameWeapon;
    private javax.swing.JButton newCharacter;
    private javax.swing.JButton newWeapon;
    private javax.swing.JButton saveCharacter;
    private javax.swing.JButton saveWeapon;
    private javax.swing.JSpinner scope;
    private javax.swing.JButton selectImageCharacterButton;
    private javax.swing.JButton selectImageWeoponButton;
    private javax.swing.JSpinner size;
    private javax.swing.JList<String> spriteList;
    private javax.swing.JTextField stateSprite;
    private javax.swing.JSpinner supplies;
    private javax.swing.JSpinner unlockLevel;
    private javax.swing.JLabel weaponLabel;
    private javax.swing.JList<String> weaponList;
    private javax.swing.JSpinner xCharacter;
    private javax.swing.JSpinner xWeapon;
    private javax.swing.JSpinner yCharacter;
    private javax.swing.JSpinner yWeapon;
    // End of variables declaration//GEN-END:variables

    private void setLists() {
        characterList.setModel(controller.getListModelCharacters());
        setListWeapon(false);
    }
    
    private void clearWeaponView(){
        nameWeapon.setText("Nombre");
        nameWeapon.setForeground(Color.GRAY);
        damageWeapon.setValue(0);
        levelWeapon.setValue(0);
        xWeapon.setValue(0);
        yWeapon.setValue(0);
        scope.setValue(0);
        explosionRange.setValue(0);
        maxSupplies.setValue(0);
        supplies.setValue(0);
        levelMultiplier.setValue(0);
        levelDepend.setSelected(false);
        setImage("./src/images/Bart.png",weaponLabel);
    }

    private void setListWeapon(boolean isInventary) {
        weaponList.setModel(controller.getListModelWeapons(isInventary));
    }

}
